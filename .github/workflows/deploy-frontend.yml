# This workflow uses the OFFICIAL Vercel CLI to deploy the npm-based frontend.

name: Deploy Frontend to Vercel (npm)

on:
  push:
    branches:
      - main # Trigger on pushes to the main branch
    paths:
      # Only run this workflow if files inside the web app or root configs change
      - 'apps/web/**' 
      - 'package.json'
      - 'turbo.json'
      - '.github/workflows/deploy-frontend.yml'

jobs:
  deploy-vercel:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20' # Use a recent LTS version of Node.js
          cache: 'npm'       # Enable caching for npm to speed up installs

      - name: Install Dependencies
        # This runs `npm install` from the root, which is correct for an npm workspace monorepo.
        run: npm install

      - name: Pull Vercel Environment Information
        # This step links the project and pulls down Vercel environment variables.
        run: npx vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}

      - name: Build Project Artifacts
        # This step builds your Next.js application for production.
        run: npx vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}

      - name: Deploy Project Artifacts to Vercel
        # This step deploys the artifacts created in the previous step to Vercel.
        run: npx vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}

